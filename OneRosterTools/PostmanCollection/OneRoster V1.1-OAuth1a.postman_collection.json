{
	"info": {
		"_postman_id": "6873b12b-d6f6-4561-828e-fa22d6f26da5",
		"name": "OneRoster V1.1-OAuth1a",
		"description": "OneRosterÂ® API version 1.1 spec is availble here: \nhttps://www.imsglobal.org/oneroster-v11-final-specification",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "APIs required for SDS",
			"item": [
				{
					"name": "Get Schools",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d97e4848-a02d-4144-bbf5-ca42de93a948",
								"exec": [
									"tests[\"Get Schools\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.schools !== null && data.schools !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.schools[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.orgs !== null && data.orgs !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.orgs[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'"
								}
							]
						},
						"description": "Gets a page of schools"
					},
					"response": []
				},
				{
					"name": "Get Classes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Classes\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"    console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));",
									"    ",
									"    pm.environment.set(\"school_id\", data.classes[0].school.sourcedId);",
									"    console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"    ",
									"    tests[\"Parse response\"] = true;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Students",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23c018af-ca3b-46ee-90d1-062d0a60b3d5",
								"exec": [
									"tests[\"Get Students\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.students !== null && data.students !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of students."
					},
					"response": []
				},
				{
					"name": "Get Teachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "339ede44-7e5e-4d6c-b391-57e5ffa4f0e5",
								"exec": [
									"tests[\"Get Teachers\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.teachers !== null && data.teachers !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of teachers."
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments of a School",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f489f5c-8eb2-4631-ba2a-5e03f56659fb",
								"exec": [
									"tests[\"Get Student Enrollments\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='student'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='student'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollments of a School",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a75c6fa9-e2ab-4b62-b4e7-a436047bed1e",
								"exec": [
									"tests[\"Get Teacher Enrollments\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='teacher'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='teacher'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Academic Sessions (Terms)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a2ea36a-94a8-49ea-8c92-770a722ec7a3",
								"exec": [
									"tests[\"Get Academic Sessions\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/academicSessions?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"academicSessions"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records",
									"disabled": true
								}
							]
						},
						"description": "Gets a page of academic sessions. Academic sessions can be of type \"School Year\", Term\", \"Semester\", \"GradingPeriod\""
					},
					"response": []
				},
				{
					"name": "Get Active Schools Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcde15e8-5caf-4237-9dda-84a6292a3879",
								"exec": [
									"tests[\"Get active schools delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.schools !== null && data.schools !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.schools[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.orgs !== null && data.orgs !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.orgs[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of schools"
					},
					"response": []
				},
				{
					"name": "Get Active Classes Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f261e93e-9f7c-4b76-b587-3ef9408a9aaa",
								"exec": [
									"tests[\"Get Active Classes Delta\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"    console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));",
									"    ",
									"    pm.environment.set(\"school_id\", data.classes[0].school.sourcedId);",
									"    console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"    ",
									"    tests[\"Parse response\"] = true;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Active Students Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd26675b-0e20-451a-8de8-dc3d4ffb5a0b",
								"exec": [
									"tests[\"Get Active Students Delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.students !== null && data.students !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of students."
					},
					"response": []
				},
				{
					"name": "Get Active Teachers Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fae38e5-8b35-4ca8-90f9-537ed90a2f00",
								"exec": [
									"tests[\"Get Active Teachers Delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.teachers !== null && data.teachers !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of teachers."
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fafc5c7-a9f0-4d2f-a66c-620fa10a24ea",
								"exec": [
									"tests[\"Get Student Enrollments Delta\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='student' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='student' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollment Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3e5eb30-c30b-422d-a3c7-8b8b3cbf4b8a",
								"exec": [
									"tests[\"Get Teacher Enrollments Delta\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='teacher' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='teacher' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get School by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c277423f-d2a2-404e-abe9-86ecfa7c730c",
								"exec": [
									"tests[\"Get School by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}"
							]
						},
						"description": "Gets a school by ID"
					},
					"response": []
				},
				{
					"name": "Get Class by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a9208ca-13b1-45e9-beda-014b27c2be67",
								"exec": [
									"tests[\"Get Class by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}"
							]
						},
						"description": "Gets a class by ID"
					},
					"response": []
				},
				{
					"name": "Get Student by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4227f927-d7ef-46ea-9cb4-629c657acc05",
								"exec": [
									"tests[\"Get Student by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students/{{student_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students",
								"{{student_id}}"
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				},
				{
					"name": "Get Teacher by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a1c1d97-8c49-49d1-ad0f-090464d49e95",
								"exec": [
									"tests[\"Get Teacher by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}"
							]
						},
						"description": "Gets a teacher by ID"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APIs used for Debugging",
			"item": [
				{
					"name": "Get Courses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/courses?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"courses"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records",
									"disabled": true
								}
							]
						},
						"description": "Gets a page of courses"
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments of a Class",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/{{class_id}}/enrollments?filter=role='student' AND status='active'&offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"{{class_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "filter",
									"value": "role='student' AND status='active'",
									"description": "Filters for active student enrollments"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollments of a Class",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/{{class_id}}/enrollments?filter=role='teacher' AND status='active'&offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"{{class_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "filter",
									"value": "role='teacher' AND status='active'",
									"description": "Filters for active teacher enrollments"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Student's Classes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students/{{student_id}}/classes?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students",
								"{{student_id}}",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Teacher's Classes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Search User by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/users?filter=givenName='Smith' AND familyName='Azure'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "givenName='Smith' AND familyName='Azure'"
								},
								{
									"key": "filter",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				},
				{
					"name": "Search User by Username or Email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/users?filter=username='stud1' OR email~'stud1'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "username='stud1' OR email~'stud1'"
								},
								{
									"key": "filter",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cd922a4d-0d1a-43e8-9112-47147f7cd235",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ef71f12-5362-497d-88f4-ff169647d81d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APIs required for GradeSync",
			"item": [
				{
					"name": "Get Teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "339ede44-7e5e-4d6c-b391-57e5ffa4f0e5",
								"exec": [
									"tests[\"Get Teacher from Email\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Teacher ID\"] = false;",
									"    if (data.teachers)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse Teacher ID\"] = true;",
									"    }",
									"    else if (data.users)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse Teacher ID\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?filter=email='{{TeacherEmailAddress}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "filter",
									"value": "email='{{TeacherEmailAddress}}'"
								}
							]
						},
						"description": "Gets a teacher based on their email."
					},
					"response": []
				},
				{
					"name": "Get Classes For Teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Classes for Teacher\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Class ID\"] = false;",
									"    if(data.classes)",
									"    {",
									"        pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"        console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));        ",
									"        tests[\"Parse Class ID\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							]
						},
						"description": "Gets a page of classes for a given teacher id."
					},
					"response": []
				},
				{
					"name": "Get Class For Teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Class for Teacher\"] = responseCode.code === 200;",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"if (responseCode.code == 200)",
									"{",
									"    if (jsonData.classes)",
									"    {",
									"        const classId = pm.environment.get(\"class_id\");",
									"        tests[\"Classes contain Class Id\"] = jsonData.classes[0].sourcedId === classId;",
									"",
									"        if (jsonData.classes[0].terms)",
									"        {",
									"            pm.environment.set(\"term_id\", jsonData.classes[0].terms[0].sourcedId);",
									"            console.log(\"Term ID set to: \" + pm.variables.get(\"term_id\"));",
									"            tests[\"Parse Term ID\"] = true;",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes?filter=sourcedId='{{class_id}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							],
							"query": [
								{
									"key": "filter",
									"value": "sourcedId='{{class_id}}'"
								}
							]
						},
						"description": "Gets a specific class for a teacher based on class_id."
					},
					"response": []
				},
				{
					"name": "Get Teachers For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Teachers For Class\"] = responseCode.code === 200;",
									"",
									"const contains = (users, user_id) => users.map(user => user.sourcedId).includes(user_id);",
									"pm.test(`Teachers contain Teacher Id`, function () {",
									"    const jsonData = pm.response.json();",
									"    const teacherId = pm.environment.get('teacher_id');",
									"    pm.expect(contains(jsonData.users, teacherId)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/teachers",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"teachers"
							]
						},
						"description": "Gets a page of teachers for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Students For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Students For Class\"] = responseCode.code === 200;\r",
									"var data = JSON.parse(responseBody);\r",
									"if(responseCode.code === 200)\r",
									"{\r",
									"    tests[\"Parse Student ID\"] = false;\r",
									"    if (data.students)\r",
									"    {\r",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);\r",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));\r",
									"        tests[\"Parse Student ID\"] = true;\r",
									"    }\r",
									"    else if (data.users)\r",
									"    {\r",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);\r",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));\r",
									"        tests[\"Parse Student ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/students",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"students"
							]
						},
						"description": "Gets a page of teachers for a class_id"
					},
					"response": []
				},
				{
					"name": "Get LineItems For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get LineItems For Class\"] = responseCode.code === 200;\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"if(responseCode.code === 200)\r",
									"{\r",
									"    tests[\"Parse LineItem ID\"] = false;\r",
									"    if (data.lineItems)\r",
									"    {\r",
									"        pm.environment.set(\"lineitem_id\", data.lineItems[0].sourcedId);\r",
									"        console.log(\"LineItem ID set to: \" + pm.variables.get(\"lineitem_id\"));\r",
									"        tests[\"Parse LineItem ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/lineitems",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"lineitems"
							]
						},
						"description": "Gets a page of lineitems for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Term",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "339ede44-7e5e-4d6c-b391-57e5ffa4f0e5",
								"exec": [
									"tests[\"Get Term\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Grading Period\"] = false;",
									"    if (jsonData.academicSession)",
									"    {",
									"        const { status, startDate, endDate } = jsonData.academicSession;",
									"        tests[\"Check Active Status\"] = (status === \"active\");",
									"",
									"        pm.environment.set(\"term_start_date\", startDate);",
									"        console.log(\"Term Start Date set to: \" + pm.variables.get(\"term_start_date\"));",
									"",
									"        pm.environment.set(\"term_end_date\", endDate);",
									"        console.log(\"Term End Date set to: \" + pm.variables.get(\"term_end_date\"));",
									"",
									"        tests[\"Parse Grading Period\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/terms/{{term_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"terms",
								"{{term_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Results For LineItem For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get LineItems For Class\"] = responseCode.code === 200;\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"if(responseCode.code === 200)\r",
									"{\r",
									"    tests[\"Parse Result ID\"] = false;\r",
									"    if (data.results)\r",
									"    {\r",
									"        pm.environment.set(\"result_id\", data.results[0].sourcedId);\r",
									"        console.log(\"Result ID set to: \" + pm.variables.get(\"result_id\"));\r",
									"        tests[\"Parse Result ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/lineitems/{{lineitem_id}}/results",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"lineitems",
								"{{lineitem_id}}",
								"results"
							]
						},
						"description": "Gets a page of results for a lineitem_id for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Results For Student For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get LineItems For Class\"] = responseCode.code === 200;\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"if(responseCode.code === 200)\r",
									"{\r",
									"    tests[\"Parse Result ID\"] = false;\r",
									"    if (data.results)\r",
									"    {\r",
									"        pm.environment.set(\"result_id\", data.results[0].sourcedId);\r",
									"        console.log(\"Result ID set to: \" + pm.variables.get(\"result_id\"));\r",
									"        tests[\"Parse Result ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/students/{{student_id}}/results",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"students",
								"{{student_id}}",
								"results"
							]
						},
						"description": "Gets a page of results for a student_id for a class_id"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth1",
		"oauth1": [
			{
				"key": "addParamsToHeader",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "consumerSecret",
				"value": "{{OneRosterConsumerSecret}}",
				"type": "string"
			},
			{
				"key": "consumerKey",
				"value": "{{OneRosterConsumerKey}}",
				"type": "string"
			},
			{
				"key": "signatureMethod",
				"value": "HMAC-SHA1",
				"type": "string"
			},
			{
				"key": "version",
				"value": "1.0",
				"type": "string"
			},
			{
				"key": "addEmptyParamsToSign",
				"value": false,
				"type": "boolean"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "78d24da4-cb34-481c-82a0-c6721371e990",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d9d723a5-1d4d-436a-9bca-437d0ee98c2c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e1b03bbb-162d-4d7e-b7e5-96ca0622a4ce",
			"key": "school_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "557520bd-b486-41de-a836-47db335fb89e",
			"key": "class_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "60d8419a-80e7-4b7a-b953-39c05d765cc0",
			"key": "student_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "500afa8c-6ae7-438b-9357-1d3f97c00d46",
			"key": "teacher_id",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}